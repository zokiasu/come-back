{
	"rules": [
		{
			"name": "Conventions de nommage des composants",
			"description": "Les composants doivent utiliser la convention PascalCase",
			"pattern": "components/*.{vue,ts,tsx}",
			"conventions": [
				{
					"type": "filename",
					"pattern": "^[A-Z][a-zA-Z0-9]*$"
				}
			]
		},
		{
			"name": "Structure des composants Vue",
			"description": "Les composants Vue doivent suivre l'ordre : <script>, <template>, <style>",
			"pattern": "**/*.vue",
			"conventions": [
				{
					"type": "structure",
					"order": ["script", "template", "style"]
				}
			]
		},
		{
			"name": "Imports des composables",
			"description": "Les composables doivent être préfixés par 'use'",
			"pattern": "composables/*.{ts,js}",
			"conventions": [
				{
					"type": "filename",
					"pattern": "^use[A-Z][a-zA-Z0-9]*$"
				}
			]
		},
		{
			"name": "Pages dynamiques",
			"description": "Les pages dynamiques doivent utiliser les crochets []",
			"pattern": "pages/**/*.vue",
			"conventions": [
				{
					"type": "dynamic-routes",
					"pattern": "\\[.*\\]\\.vue$"
				}
			]
		},
		{
			"name": "Types TypeScript",
			"description": "Les fichiers de types doivent être suffixés par .d.ts ou .types.ts",
			"pattern": "types/**/*",
			"conventions": [
				{
					"type": "filename",
					"pattern": ".*(\\.d\\.ts|\\.types\\.ts)$"
				}
			]
		},
		{
			"name": "Store Pinia",
			"description": "Les stores doivent utiliser le suffixe Store",
			"pattern": "stores/*.ts",
			"conventions": [
				{
					"type": "filename",
					"pattern": ".*Store\\.ts$"
				}
			]
		},
		{
			"name": "Middleware",
			"description": "Les middlewares doivent être en kebab-case",
			"pattern": "middleware/*.ts",
			"conventions": [
				{
					"type": "filename",
					"pattern": "^[a-z][a-z0-9-]*$"
				}
			]
		}
	],
	"recommendations": {
		"extensions": [
			"Vue.volar",
			"dbaeumer.vscode-eslint",
			"esbenp.prettier-vscode",
			"bradlc.vscode-tailwindcss"
		],
		"settings": {
			"editor.formatOnSave": true,
			"editor.defaultFormatter": "esbenp.prettier-vscode",
			"editor.codeActionsOnSave": {
				"source.fixAll.eslint": true
			},
			"typescript.tsdk": "node_modules/typescript/lib"
		}
	}
}
