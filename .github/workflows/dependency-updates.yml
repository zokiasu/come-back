name: Dependency Updates

on:
  schedule:
    # Ex√©cute tous les lundis √† 9h00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Permet l'ex√©cution manuelle

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check for dependency updates
        id: check-updates
        run: |
          # V√©rifier les mises √† jour disponibles
          npx npm-check-updates --jsonUpgraded > updates.json || echo "{}" > updates.json
          
          # Compter le nombre de mises √† jour
          UPDATES_COUNT=$(cat updates.json | jq '. | length')
          echo "updates_count=$UPDATES_COUNT" >> $GITHUB_OUTPUT
          
          # Cr√©er un r√©sum√© des mises √† jour
          if [ "$UPDATES_COUNT" -gt 0 ]; then
            echo "updates_available=true" >> $GITHUB_OUTPUT
            cat updates.json | jq -r 'to_entries[] | "- \(.key): \(.value)"' > update_summary.txt
          else
            echo "updates_available=false" >> $GITHUB_OUTPUT
            echo "Aucune mise √† jour disponible." > update_summary.txt
          fi

      - name: Update dependencies
        if: steps.check-updates.outputs.updates_available == 'true'
        run: |
          # Mettre √† jour les d√©pendances
          npx npm-check-updates -u
          npm install

      - name: Run tests after updates
        if: steps.check-updates.outputs.updates_available == 'true'
        run: |
          # Ex√©cuter les v√©rifications de qualit√©
          npm run lint || true
          npm run build

      - name: Create Pull Request
        if: steps.check-updates.outputs.updates_available == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: mise √† jour des d√©pendances'
          title: 'üîÑ Mise √† jour automatique des d√©pendances'
          body: |
            ## üì¶ Mise √† jour des d√©pendances
            
            Cette PR a √©t√© cr√©√©e automatiquement pour mettre √† jour les d√©pendances du projet.
            
            ### Mises √† jour incluses:
            
            $(cat update_summary.txt || echo "Voir les changements dans package.json")
            
            ### ‚úÖ V√©rifications effectu√©es:
            - [x] Installation des nouvelles d√©pendances
            - [x] Ex√©cution du linting
            - [x] Build de production
            
            ### üîç √Ä v√©rifier manuellement:
            - [ ] Tests unitaires et d'int√©gration
            - [ ] Fonctionnalit√©s critiques
            - [ ] Performance de l'application
            
            ---
            
            ü§ñ Cette PR a √©t√© g√©n√©r√©e automatiquement par GitHub Actions.
          branch: dependency-updates-${{ github.run_number }}
          delete-branch: true
          labels: |
            dependencies
            automated
            chore

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '‚ùå √âchec de la mise √† jour des d√©pendances',
              body: '## Probl√®me d√©tect√©\n\nLa mise √† jour automatique des d√©pendances a √©chou√©.\n\n**Action requise:** V√©rifiez manuellement les d√©pendances et corrigez les conflits √©ventuels.\n\n**Workflow:** ' + context.workflow + '\n**Run ID:** ' + context.runId,
              labels: ['bug', 'dependencies', 'needs-attention']
            });